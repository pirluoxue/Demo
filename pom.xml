<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.3.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.example</groupId>
    <artifactId>demo</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>demo</name>
    <description>Demo project for Spring Boot</description>
    <properties>
        <java.version>1.8</java.version>
        <spark.version>2.4.5</spark.version>
    </properties>

    <dependencies>
        <!-- https://mvnrepository.com/artifact/org.apache.httpcomponents/httpasyncclient -->
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpasyncclient</artifactId>
            <version>4.1.4</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.dom4j/dom4j -->
        <dependency>
            <groupId>org.dom4j</groupId>
            <artifactId>dom4j</artifactId>
            <version>2.1.1</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/joda-time/joda-time -->
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>2.10.8</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-compress -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-compress</artifactId>
            <version>1.20</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.reflections/reflections -->
        <dependency>
            <groupId>org.reflections</groupId>
            <artifactId>reflections</artifactId>
            <version>0.9.12</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.mongodb.spark/mongo-spark-connector -->
        <dependency>
            <groupId>org.mongodb.spark</groupId>
            <artifactId>mongo-spark-connector_2.11</artifactId>
            <version>2.4.2</version>
        </dependency>

        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-core_2.11</artifactId>
            <version>${spark.version}</version>
<!--            slf4j和spring内的LoggerFactory冲突-->
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>log4j-over-slf4j</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-log4j12</artifactId>
                </exclusion>
<!--                <exclusion>-->
<!--                    <groupId>com.google.guava</groupId>-->
<!--                    <artifactId>guava</artifactId>-->
<!--                </exclusion>-->
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-graphx_2.11</artifactId>
            <version>${spark.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-sql_2.11</artifactId>
            <version>${spark.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-streaming_2.11</artifactId>
            <version>${spark.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-mllib_2.11</artifactId>
            <version>${spark.version}</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-hive_2.11</artifactId>
            <version>${spark.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-quartz -->
<!--        使用springboot自动配置，省事。自定义配置可以通过yml和手动注册bean-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-quartz</artifactId>
            <version>2.1.3.RELEASE</version>
        </dependency>

        <!--quartz-->
        <dependency>
            <groupId>org.quartz-scheduler</groupId>
            <artifactId>quartz</artifactId>
            <version>2.3.2</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.alibaba/easyexcel -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>easyexcel</artifactId>
            <version>2.1.6</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/commons-io/commons-io -->
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.6</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.9</version>
        </dependency>

        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi</artifactId>
            <version>4.1.0</version>
        </dependency>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>4.1.0</version>
        </dependency>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml-schemas</artifactId>
            <version>4.1.0</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.springframework.data/spring-data-mongodb -->
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-mongodb</artifactId>
            <version>3.3.5</version>
        </dependency>

        <dependency>
            <groupId>org.eclipse.leshan</groupId>
            <artifactId>leshan-client-cf</artifactId>
            <version>1.0.0-M12</version>
        </dependency>

        <dependency>
            <groupId>org.eclipse.leshan</groupId>
            <artifactId>leshan-server-cf</artifactId>
            <version>1.0.0-M12</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-activemq -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-activemq</artifactId>
            <version>2.1.3.RELEASE</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.mongodb/mongo-java-driver -->
        <dependency>
            <groupId>org.mongodb</groupId>
            <artifactId>mongo-java-driver</artifactId>
            <version>3.10.2</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/net.sf.json-lib/json-lib -->
        <dependency>
            <groupId>net.sf.json-lib</groupId>
            <artifactId>json-lib</artifactId>
            <version>2.4</version>
            <classifier>jdk15</classifier>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-logging -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-logging</artifactId>
            <version>2.1.3.RELEASE</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-log4j2</artifactId>
        </dependency>

        <!--  支付宝SDK -->
        <dependency>
            <groupId>com.alipay.sdk</groupId>
            <artifactId>alipay-sdk-java</artifactId>
            <version>3.7.4.ALL</version>
        </dependency>

        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq-codegen</artifactId>
            <version>${jooq.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jooq</artifactId>
        </dependency>

        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.dataformat/jackson-dataformat-yaml -->
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-yaml</artifactId>
            <version>2.9.8</version>
        </dependency>

        <!-- other -->
        <dependency>
            <groupId>redis.clients</groupId>
            <artifactId>jedis</artifactId>
        </dependency>

        <dependency>
            <groupId>com.rabbitmq</groupId>
            <artifactId>amqp-client</artifactId>
            <version>5.6.0</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient -->
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.5.7</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.google.zxing/core -->
        <dependency>
            <groupId>com.google.zxing</groupId>
            <artifactId>core</artifactId>
            <version>3.3.0</version>
        </dependency>

        <!--freemarker标签-->
        <dependency>
            <groupId>net.mingsoft</groupId>
            <artifactId>shiro-freemarker-tags</artifactId>
            <version>0.1</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-freemarker</artifactId>
        </dependency>


        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>

        <!--google插件-->
<!--        <dependency>-->
<!--            <groupId>com.google.guava</groupId>-->
<!--            <artifactId>guava</artifactId>-->
<!--            <version>23.0</version>-->
<!--        </dependency>-->

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!-- alibaba -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>1.2.62</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>12</source>
                    <target>12</target>
                </configuration>
            </plugin>

            <!--jooq 构建构建工具-->
<!--            <plugin>-->
<!--                <groupId>org.jooq</groupId>-->
<!--                <artifactId>jooq-codegen-maven</artifactId>-->
<!--                <version>${jooq.version}</version>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <goals>-->
<!--                            <goal>generate</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--                <dependencies>-->
<!--                    <dependency>-->
<!--                        <groupId>mysql</groupId>-->
<!--                        <artifactId>mysql-connector-java</artifactId>-->
<!--                        <version>${mysql.version}</version>-->
<!--                    </dependency>-->
<!--                </dependencies>-->
<!--                <configuration>-->
<!--                    &lt;!&ndash; JDBC connection parameters &ndash;&gt;-->
<!--                    <jdbc>-->
<!--                        &lt;!&ndash;<driver>com.mysql.jdbc.Driver</driver>&ndash;&gt;-->
<!--                        &lt;!&ndash;<url>jdbc:mysql://120.55.60.50:3306/mhe?useUnicode=true&amp;characterEncoding=UTF-8&amp;useSSL=false</url>&ndash;&gt;-->
<!--                        &lt;!&ndash;<username>root</username>&ndash;&gt;-->
<!--                        &lt;!&ndash;<password>Xm@xhe2018</password>&ndash;&gt;-->
<!--                        <driver>com.mysql.jdbc.Driver</driver>-->
<!--                        <url>jdbc:mysql://192.168.10.24:3306/opentogetdb?useUnicode=true&amp;characterEncoding=UTF-8&amp;useSSL=false</url>-->
<!--                        <username>root</username>-->
<!--                        <password>123456</password>-->
<!--                    </jdbc>-->
<!--                    <generator>-->
<!--                        &lt;!&ndash;<name>com.xiaobo.parkingmanage.components.jooq.MyGenerator</name>&ndash;&gt;-->
<!--                        <database>-->
<!--                            <name>org.jooq.meta.mysql.MySQLDatabase</name>-->
<!--                            &lt;!&ndash;include和exclude用于控制为数据库中哪些表生成代码&ndash;&gt;-->
<!--                            <includes>-->
<!--                                &lt;!&ndash; system &ndash;&gt;-->
<!--                                |user-->
<!--                                |order-->
<!--                                &lt;!&ndash;|xx_member&ndash;&gt;-->

<!--                            </includes>-->
<!--                            &lt;!&ndash;<excludes></excludes>&ndash;&gt;-->
<!--                            &lt;!&ndash;数据库名&ndash;&gt;-->
<!--                            &lt;!&ndash;inputSchema 输入模式&ndash;&gt;-->
<!--                            <schemata>-->
<!--                                <schema>-->
<!--                                    <inputSchema>opentogetdb</inputSchema>-->
<!--                                </schema>-->
<!--                            </schemata>-->
<!--                            &lt;!&ndash;强制类型&ndash;&gt;-->
<!--                            <forcedTypes>-->
<!--                                <forcedType>-->
<!--                                    <name>BOOLEAN</name>-->
<!--                                    <types>(?i:TINYINT(\s*\(\d+\))?(\s*UNSIGNED)?)</types>-->
<!--                                </forcedType>-->
<!--                            </forcedTypes>-->
<!--                        </database>-->
<!--                        <generate>-->
<!--                            &lt;!&ndash;生成dao和pojo&ndash;&gt;-->
<!--                            <pojos>true</pojos>-->
<!--                            <validationAnnotations>true</validationAnnotations>-->
<!--                            &lt;!&ndash; Generate interfaces that will be implemented by records and/or pojos.-->
<!--                             You can also use these interfaces in Record.into(Class<?>) and similar-->
<!--                             methods, to let jOOQ return proxy objects for them.-->
<!--                             Defaults to false &ndash;&gt;-->
<!--                            <interfaces>false</interfaces>-->
<!--                            <daos>false</daos>-->
<!--                            <deprecated>true</deprecated>-->
<!--                            <routines>true</routines>-->
<!--                        </generate>-->
<!--                        &lt;!&ndash; 生成策略配置 &ndash;&gt;-->
<!--                        &lt;!&ndash;<strategy>&ndash;&gt;-->
<!--                            &lt;!&ndash;<matchers>&ndash;&gt;-->
<!--                                &lt;!&ndash;<tables>&ndash;&gt;-->
<!--                                    &lt;!&ndash;<table>&ndash;&gt;-->
<!--                                        &lt;!&ndash;&lt;!&ndash; These elements influence the naming of a generated POJO object.  &ndash;&gt;&ndash;&gt;-->
<!--                                        &lt;!&ndash;<pojoExtends>com.example.demo.model.entity.common.BaseEntity</pojoExtends>&ndash;&gt;-->
<!--                                    &lt;!&ndash;</table>&ndash;&gt;-->
<!--                                &lt;!&ndash;</tables>&ndash;&gt;-->
<!--                            &lt;!&ndash;</matchers>&ndash;&gt;-->
<!--                        &lt;!&ndash;</strategy>&ndash;&gt;-->
<!--                        <target>-->
<!--                            <packageName>com.example.demo.model.entity.jooq</packageName>-->
<!--                            <directory>src/main/java</directory>-->
<!--                        </target>-->
<!--                    </generator>-->
<!--                </configuration>-->
<!--            </plugin>-->
        </plugins>
    </build>

</project>
