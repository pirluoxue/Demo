<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.3.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.example</groupId>
    <artifactId>demo</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>demo</name>
    <description>Demo project for Spring Boot</description>

    <properties>
        <java.version>1.8</java.version>
    </properties>

    <dependencies>

        <!-- https://mvnrepository.com/artifact/org.mongodb/mongo-java-driver -->
        <dependency>
            <groupId>org.mongodb</groupId>
            <artifactId>mongo-java-driver</artifactId>
            <version>3.10.2</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/net.sf.json-lib/json-lib -->
        <dependency>
            <groupId>net.sf.json-lib</groupId>
            <artifactId>json-lib</artifactId>
            <version>2.4</version>
            <classifier>jdk15</classifier>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-logging -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-logging</artifactId>
            <version>2.1.1.RELEASE</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-log4j2</artifactId>
        </dependency>

        <!--  支付宝SDK -->
        <dependency>
            <groupId>com.alipay.sdk</groupId>
            <artifactId>alipay-sdk-java</artifactId>
            <version>3.7.4.ALL</version>
        </dependency>

        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq-codegen</artifactId>
            <version>${jooq.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jooq</artifactId>
        </dependency>

        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.dataformat/jackson-dataformat-yaml -->
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-yaml</artifactId>
            <version>2.9.8</version>
        </dependency>

        <!-- other -->
        <dependency>
            <groupId>redis.clients</groupId>
            <artifactId>jedis</artifactId>
        </dependency>

        <dependency>
            <groupId>com.rabbitmq</groupId>
            <artifactId>amqp-client</artifactId>
            <version>5.6.0</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient -->
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.5.7</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.google.zxing/core -->
        <dependency>
            <groupId>com.google.zxing</groupId>
            <artifactId>core</artifactId>
            <version>3.3.0</version>
        </dependency>

        <!--freemarker标签-->
        <dependency>
            <groupId>net.mingsoft</groupId>
            <artifactId>shiro-freemarker-tags</artifactId>
            <version>0.1</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-freemarker</artifactId>
        </dependency>


        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>

        <!--google插件-->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>23.0</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!-- alibaba -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>1.2.51</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <!--jooq 构建构建工具-->
            <plugin>
                <groupId>org.jooq</groupId>
                <artifactId>jooq-codegen-maven</artifactId>
                <version>${jooq.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>mysql</groupId>
                        <artifactId>mysql-connector-java</artifactId>
                        <version>${mysql.version}</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <!-- JDBC connection parameters -->
                    <jdbc>
                        <!--<driver>com.mysql.jdbc.Driver</driver>-->
                        <!--<url>jdbc:mysql://120.55.60.50:3306/mhe?useUnicode=true&amp;characterEncoding=UTF-8&amp;useSSL=false</url>-->
                        <!--<username>root</username>-->
                        <!--<password>Xm@xhe2018</password>-->
                        <driver>com.mysql.jdbc.Driver</driver>
                        <url>jdbc:mysql://192.168.10.24:3306/opentogetdb?useUnicode=true&amp;characterEncoding=UTF-8&amp;useSSL=false</url>
                        <username>root</username>
                        <password>123456</password>
                    </jdbc>
                    <generator>
                        <!--<name>com.xiaobo.parkingmanage.components.jooq.MyGenerator</name>-->
                        <database>
                            <name>org.jooq.meta.mysql.MySQLDatabase</name>
                            <!--include和exclude用于控制为数据库中哪些表生成代码-->
                            <includes>
                                <!-- system -->
                                |user
                                |order
                                <!--|xx_member-->

                            </includes>
                            <!--<excludes></excludes>-->
                            <!--数据库名-->
                            <!--inputSchema 输入模式-->
                            <schemata>
                                <schema>
                                    <inputSchema>opentogetdb</inputSchema>
                                </schema>
                            </schemata>
                            <!--强制类型-->
                            <forcedTypes>
                                <forcedType>
                                    <name>BOOLEAN</name>
                                    <types>(?i:TINYINT(\s*\(\d+\))?(\s*UNSIGNED)?)</types>
                                </forcedType>
                            </forcedTypes>
                        </database>
                        <generate>
                            <!--生成dao和pojo-->
                            <pojos>true</pojos>
                            <validationAnnotations>true</validationAnnotations>
                            <!-- Generate interfaces that will be implemented by records and/or pojos.
                             You can also use these interfaces in Record.into(Class<?>) and similar
                             methods, to let jOOQ return proxy objects for them.
                             Defaults to false -->
                            <interfaces>false</interfaces>
                            <daos>false</daos>
                            <deprecated>true</deprecated>
                            <routines>true</routines>
                        </generate>
                        <!-- 生成策略配置 -->
                        <!--<strategy>-->
                            <!--<matchers>-->
                                <!--<tables>-->
                                    <!--<table>-->
                                        <!--&lt;!&ndash; These elements influence the naming of a generated POJO object.  &ndash;&gt;-->
                                        <!--<pojoExtends>com.example.demo.model.entity.common.BaseEntity</pojoExtends>-->
                                    <!--</table>-->
                                <!--</tables>-->
                            <!--</matchers>-->
                        <!--</strategy>-->
                        <target>
                            <packageName>com.example.demo.model.entity.jooq</packageName>
                            <directory>src/main/java</directory>
                        </target>
                    </generator>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
